<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.mhtech.platform.msrv.auth.dao.mapper.SysGatewayAccessLogMapper">
	<resultMap id="BaseResultMap"
		type="com.mhtech.platform.msrv.auth.dao.model.SysGatewayAccessLog">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="ip" property="ip" jdbcType="VARCHAR" />
		<result column="url" property="url" jdbcType="VARCHAR" />
		<result column="params" property="params" jdbcType="VARCHAR" />
		<result column="created_time" property="createdTime"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs"
		type="com.mhtech.platform.msrv.auth.dao.model.SysGatewayAccessLog"
		extends="BaseResultMap">
		<result column="request_body" property="requestBody"
			jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, ip, url, params, created_time
	</sql>
	<sql id="Blob_Column_List">
		request_body
	</sql>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from sys_gateway_access_log
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from sys_gateway_access_log
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert"
		parameterType="com.mhtech.platform.msrv.auth.dao.model.SysGatewayAccessLog">
		insert into sys_gateway_access_log (id, ip, url, params, created_time, request_body) values 
		(#{id,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{params,jdbcType=VARCHAR}, 
		now(), #{requestBody,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.mhtech.platform.msrv.auth.dao.model.SysGatewayAccessLog">
		insert into sys_gateway_access_log
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="ip != null">
				ip,
			</if>
			<if test="url != null">
				url,
			</if>
			<if test="params != null">
				params,
			</if>
			<if test="createdTime != null">
				created_time,
			</if>
			<if test="requestBody != null">
				request_body,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="ip != null">
				#{ip,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
			<if test="params != null">
				#{params,jdbcType=VARCHAR},
			</if>
			<if test="createdTime != null">
				#{createdTime,jdbcType=TIMESTAMP},
			</if>
			<if test="requestBody != null">
				#{requestBody,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.mhtech.platform.msrv.auth.dao.model.SysGatewayAccessLog">
		update sys_gateway_access_log
		<set>
			<if test="ip != null">
				ip = #{ip,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
			<if test="params != null">
				params = #{params,jdbcType=VARCHAR},
			</if>
			<if test="createdTime != null">
				created_time = #{createdTime,jdbcType=TIMESTAMP},
			</if>
			<if test="requestBody != null">
				request_body = #{requestBody,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs"
		parameterType="com.mhtech.platform.msrv.auth.dao.model.SysGatewayAccessLog">
		update sys_gateway_access_log
		set ip = #{ip,jdbcType=VARCHAR},
		url = #{url,jdbcType=VARCHAR},
		params = #{params,jdbcType=VARCHAR},
		created_time = #{createdTime,jdbcType=TIMESTAMP},
		request_body = #{requestBody,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.mhtech.platform.msrv.auth.dao.model.SysGatewayAccessLog">
		update sys_gateway_access_log
		set ip = #{ip,jdbcType=VARCHAR},
		url = #{url,jdbcType=VARCHAR},
		params = #{params,jdbcType=VARCHAR},
		created_time = #{createdTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=VARCHAR}
	</update>
</mapper>