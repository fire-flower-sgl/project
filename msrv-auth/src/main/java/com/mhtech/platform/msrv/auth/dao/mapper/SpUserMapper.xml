<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mhtech.platform.msrv.auth.dao.mapper.SpUserMapper">
	<resultMap id="BaseResultMap" type="com.mhtech.platform.msrv.auth.dao.model.SpUser">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="user_code" property="userCode" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="company_code" property="companyCode" jdbcType="VARCHAR" />
		<result column="org_code" property="orgCode" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="multi_login" property="multiLogin" jdbcType="VARCHAR" />
		<result column="user_type" property="userType" jdbcType="VARCHAR" />
		<result column="update_user" property="updateUser" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_code, name, password, company_code, org_code, email, phone,
		multi_login,
		user_type, update_user, update_time
	</sql>
	
	
	<select id="sign" resultType="java.lang.Integer"  parameterType="java.lang.String">
	    <![CDATA[ select count(1) from sp_user  where `user_code`=#{userCode} and `password`=#{password} ]]>
	</select>
	
    <select id="select" resultMap="BaseResultMap"  parameterType="java.lang.String">
		select <include refid="Base_Column_List" /> from sp_user  where `name`=#{name} and `password`=#{password}
	</select>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from sp_user
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from sp_user
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.mhtech.platform.msrv.auth.dao.model.SpUser">
		insert into sp_user (id, user_code, name,
		password, company_code, org_code,
		email, phone, multi_login,
		user_type, update_user, update_time
		)
		values (#{id,jdbcType=BIGINT}, #{userCode,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}, #{companyCode,jdbcType=VARCHAR}, #{orgCode,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
		#{multiLogin,jdbcType=VARCHAR},
		#{userType,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.mhtech.platform.msrv.auth.dao.model.SpUser">
		insert into sp_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userCode != null">
				user_code,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="companyCode != null">
				company_code,
			</if>
			<if test="orgCode != null">
				org_code,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="multiLogin != null">
				multi_login,
			</if>
			<if test="userType != null">
				user_type,
			</if>
			<if test="updateUser != null">
				update_user,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="userCode != null">
				#{userCode,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="companyCode != null">
				#{companyCode,jdbcType=VARCHAR},
			</if>
			<if test="orgCode != null">
				#{orgCode,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="multiLogin != null">
				#{multiLogin,jdbcType=VARCHAR},
			</if>
			<if test="userType != null">
				#{userType,jdbcType=VARCHAR},
			</if>
			<if test="updateUser != null">
				#{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.mhtech.platform.msrv.auth.dao.model.SpUser">
		update sp_user
		<set>
			<if test="userCode != null">
				user_code = #{userCode,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="companyCode != null">
				company_code = #{companyCode,jdbcType=VARCHAR},
			</if>
			<if test="orgCode != null">
				org_code = #{orgCode,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="multiLogin != null">
				multi_login = #{multiLogin,jdbcType=VARCHAR},
			</if>
			<if test="userType != null">
				user_type = #{userType,jdbcType=VARCHAR},
			</if>
			<if test="updateUser != null">
				update_user = #{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.mhtech.platform.msrv.auth.dao.model.SpUser">
		update sp_user
		set user_code = #{userCode,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		company_code = #{companyCode,jdbcType=VARCHAR},
		org_code = #{orgCode,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		multi_login = #{multiLogin,jdbcType=VARCHAR},
		user_type = #{userType,jdbcType=VARCHAR},
		update_user = #{updateUser,jdbcType=VARCHAR},
		update_time = #{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	<!-- 根据用户名称模糊查询用户 -->
	<select id="selectAllUser" resultType="java.util.HashMap" >
	    select user_code as code ,name value
	    from sp_user 
	    where 1=1 
	    <if test="name != null" >
	    	and name like '%${name}%'
	    </if>
	</select>
	
	<!-- 根据用户编码查询用户基本信息 -->
	<select id="selectUserInfo" resultType="java.util.HashMap">
		select user_code as userCode, name as userName, email, phone
		from sp_user  where `user_code`=#{userCode} 
	</select>
</mapper>